clc,clear
%行为样本，列为指标
X=[39414	2823	34877	44562	2036	603	322	934936	929914	1492	29811
54934	1911	52242	35262	3862	908	396	1075563	1030664	1780	29811
96442	2743	88737	303221	4307	1596	694	1104835	1010146	1936	32678
107079	3036	98513	478883	3956	2530	1089	909220	862077	2160	36063
124359	3326	116897	378318	4102	2669	1179	1117851	1123109	2349	38951
140167	3900	130355	261203	4180	3538	1991	1116429	1100510	2446	40324
161523	3989	153722	444755	4309	3727	1593	878466	880226	2637	43211
177681	4669	167161	422267	4630	6629	1867	1048053	1003952	2904	47116
124969	4416	111415	286399	3829	5665	2591	1142395	1112661	3092	49406
146015	3200	129997	228695	5308	4911	2506	1202365	1112475	3252	51119];
[n,m]=size(X);
%% 正向化
z=find(X<=0);
if length(z)~=0
    for i=1:n
        for j=1:m
             x(i,j)=(X(i,j)-min(X(:,j)))/(max(X(:,j))-min(X(:,j)));
        end
    end
    X=x;
end
%% 归一化
for i=1:n
    for j=1:m
        p(i,j)=(X(i,j)+0.00000000001)/sum(X(:,j));
        %这里加极其小的数，是为了防止后面当p为0的时候log(p)无法计算
    end
end
%% 计算第 j 个指标的熵值 e(j)
k=1/log(n);
for j=1:m
    e(j)=-k*sum(p(:,j).*log(p(:,j)));
end
d=ones(1,m)-e; % 计算信息熵冗余度
w=d./sum(d) % 求权值 w
